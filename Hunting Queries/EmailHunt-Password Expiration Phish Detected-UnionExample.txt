let maliciousSubjectCombo1= materialize (EmailEvents
// Looking for a subject similar to this pattern FW: sAMAccountName: Password Notification Wednesday, 22 March 2023
| where RecipientEmailAddress != "bma_journaling@bma.int" // exclude barracuda journaling
| where DeliveryAction == "Delivered"
| where EmailDirection == "Inbound" 
| extend sAMAccountName = extract("^[^@]*", 0 , RecipientEmailAddress) // Regex sAMAccountName for fake password phish attempt in subject
| where SenderMailFromAddress !endswith "scoutcamp.bounces.google.com" // google service account contains random prefix characters
| where SenderFromAddress <> "google-workspace-alerts-noreply@google.com"
| where SenderFromAddress <> "msonlineservicesteam@microsoftonline.com" // microsoft service account for self service password reset
| where Subject has sAMAccountName and Subject has "password"
| distinct NetworkMessageId,SenderFromAddress,RecipientEmailAddress,Subject
);
let maliciousSubjectCombo2= materialize (EmailEvents
// Looking for a subject similar to this pattern domain.org Notification Password Monday, March 20, 2023
| where RecipientEmailAddress != "bma_journaling@bma.int" // exclude barracuda journaling
| where DeliveryAction == "Delivered"
| where EmailDirection == "Inbound" 
| extend RecipientEmailDomain = extract("\\@(.*)", 1, RecipientEmailAddress)// Regex RecipientEmailDomain for fake password phish attempt in subject
| where SenderMailFromAddress !endswith "scoutcamp.bounces.google.com" // google service account contains random prefix characters
| where SenderFromAddress <> "google-workspace-alerts-noreply@google.com"
| where SenderFromAddress <> "msonlineservicesteam@microsoftonline.com" // microsoft service account for self service password reset
| where Subject has RecipientEmailDomain and Subject has "password"
| distinct NetworkMessageId,SenderFromAddress, RecipientEmailAddress,Subject
);
let maliciousSubjectCombo3= materialize (EmailEvents
// Looking for a subject similar to this pattern domain Notification Password Monday, March 20, 2023
| where RecipientEmailAddress != "bma_journaling@bma.int" // exclude barracuda journaling
| where DeliveryAction == "Delivered"
| where EmailDirection == "Inbound" 
| extend domainName = extract(@"@([^@]+)\.", 1, RecipientEmailAddress)// Regex RecipientEmailDomain for fake password phish attempt in subject
| where SenderMailFromAddress !endswith "scoutcamp.bounces.google.com" // google service account contains random prefix characters
| where SenderFromAddress <> "google-workspace-alerts-noreply@google.com"
| where SenderFromAddress <> "msonlineservicesteam@microsoftonline.com" // microsoft service account for self service password reset
| where Subject has domainName and Subject has "password"
| distinct NetworkMessageId,SenderFromAddress,RecipientEmailAddress,Subject
);
let unionedTables = union maliciousSubjectCombo1,maliciousSubjectCombo2,maliciousSubjectCombo3;
EmailUrlInfo
| join kind=inner unionedTables on NetworkMessageId
